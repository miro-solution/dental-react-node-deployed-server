{"version":3,"file":"static/js/456.166bd84d.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","views/auth/AuthCardWrapper.js","views/auth/AuthWrapper.js","../node_modules/react-auth-code-input/src/index.tsx","views/auth/auth-header/VerifyCode.js"],"sourcesContent":["// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://dentoconect.io\" target=\"_blank\" underline=\"hover\">\r\n      dentoconect.io\r\n    </Typography>\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://codemaster.com\" target=\"_blank\" underline=\"hover\">\r\n      &copy; codemaster.com\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n  <MainCard\r\n    sx={{\r\n      maxWidth: { xs: 400, lg: 475 },\r\n      margin: { xs: 2.5, md: 3 },\r\n      '& > *': {\r\n        flexGrow: 1,\r\n        flexBasis: '50%'\r\n      }\r\n    }}\r\n    content={false}\r\n    {...other}\r\n  >\r\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n  </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.light,\r\n  minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import React, {\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react';\n\nconst allowedCharactersValues = ['alpha', 'numeric', 'alphanumeric'] as const;\n\nexport type AuthCodeProps = {\n  allowedCharacters?: typeof allowedCharactersValues[number];\n  ariaLabel?: string;\n  autoFocus?: boolean;\n  containerClassName?: string;\n  disabled?: boolean;\n  inputClassName?: string;\n  isPassword?: boolean;\n  length?: number;\n  placeholder?: string;\n  onChange: (res: string) => void;\n};\n\ntype InputMode = 'text' | 'numeric';\n\ntype InputType = 'text' | 'tel' | 'password';\n\ntype InputProps = {\n  type: InputType;\n  inputMode: InputMode;\n  pattern: string;\n  min?: string;\n  max?: string;\n};\n\nexport type AuthCodeRef = {\n  focus: () => void;\n  clear: () => void;\n};\n\nconst propsMap: { [key: string]: InputProps } = {\n  alpha: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z]{1}'\n  },\n\n  alphanumeric: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z0-9]{1}'\n  },\n\n  numeric: {\n    type: 'tel',\n    inputMode: 'numeric',\n    pattern: '[0-9]{1}',\n    min: '0',\n    max: '9'\n  }\n};\n\nconst AuthCode = forwardRef<AuthCodeRef, AuthCodeProps>(\n  (\n    {\n      allowedCharacters = 'alphanumeric',\n      ariaLabel,\n      autoFocus = true,\n      containerClassName,\n      disabled,\n      inputClassName,\n      isPassword = false,\n      length = 6,\n      placeholder,\n      onChange\n    },\n    ref\n  ) => {\n    if (isNaN(length) || length < 1) {\n      throw new Error('Length should be a number and greater than 0');\n    }\n\n    if (!allowedCharactersValues.some((value) => value === allowedCharacters)) {\n      throw new Error(\n        'Invalid value for allowedCharacters. Use alpha, numeric, or alphanumeric'\n      );\n    }\n\n    const inputsRef = useRef<Array<HTMLInputElement>>([]);\n    const inputProps = propsMap[allowedCharacters];\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputsRef.current) {\n          inputsRef.current[0].focus();\n        }\n      },\n      clear: () => {\n        if (inputsRef.current) {\n          for (let i = 0; i < inputsRef.current.length; i++) {\n            inputsRef.current[i].value = '';\n          }\n          inputsRef.current[0].focus();\n        }\n        sendResult();\n      }\n    }));\n\n    useEffect(() => {\n      if (autoFocus) {\n        inputsRef.current[0].focus();\n      }\n    }, []);\n\n    const sendResult = () => {\n      const res = inputsRef.current.map((input) => input.value).join('');\n      onChange && onChange(res);\n    };\n\n    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {\n        target: { value, nextElementSibling }\n      } = e;\n      if (value.length > 1) {\n        e.target.value = value.charAt(0);\n        if (nextElementSibling !== null) {\n          (nextElementSibling as HTMLInputElement).focus();\n        }\n      } else {\n        if (value.match(inputProps.pattern)) {\n          if (nextElementSibling !== null) {\n            (nextElementSibling as HTMLInputElement).focus();\n          }\n        } else {\n          e.target.value = '';\n        }\n      }\n      sendResult();\n    };\n\n    const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      const { key } = e;\n      const target = e.target as HTMLInputElement;\n      if (key === 'Backspace') {\n        if (target.value === '') {\n          if (target.previousElementSibling !== null) {\n            const t = target.previousElementSibling as HTMLInputElement;\n            t.value = '';\n            t.focus();\n            e.preventDefault();\n          }\n        } else {\n          target.value = '';\n        }\n        sendResult();\n      }\n    };\n\n    const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      e.target.select();\n    };\n\n    const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n      const pastedValue = e.clipboardData.getData('Text');\n\n      let currentInput = 0;\n\n      for (let i = 0; i < pastedValue.length; i++) {\n        const pastedCharacter = pastedValue.charAt(i);\n        const currentValue = inputsRef.current[currentInput].value;\n        if (pastedCharacter.match(inputProps.pattern)) {\n          if (!currentValue) {\n            inputsRef.current[currentInput].value = pastedCharacter;\n            if (inputsRef.current[currentInput].nextElementSibling !== null) {\n              (inputsRef.current[currentInput]\n                .nextElementSibling as HTMLInputElement).focus();\n              currentInput++;\n            }\n          }\n        }\n      }\n      sendResult();\n\n      e.preventDefault();\n    };\n\n    const inputs = [];\n    for (let i = 0; i < length; i++) {\n      inputs.push(\n        <input\n          key={i}\n          onChange={handleOnChange}\n          onKeyDown={handleOnKeyDown}\n          onFocus={handleOnFocus}\n          onPaste={handleOnPaste}\n          {...inputProps}\n          type={isPassword ? 'password' : inputProps.type}\n          ref={(el: HTMLInputElement) => {\n            inputsRef.current[i] = el;\n          }}\n          maxLength={1}\n          className={inputClassName}\n          autoComplete={i === 0 ? 'one-time-code' : 'off'}\n          aria-label={\n            ariaLabel\n              ? `${ariaLabel}. Character ${i + 1}.`\n              : `Character ${i + 1}.`\n          }\n          disabled={disabled}\n          placeholder={placeholder}\n        />\n      );\n    }\n\n    return <div className={containerClassName}>{inputs}</div>;\n  }\n);\n\nexport default AuthCode;\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Box, TextField, InputAdornment, Divider, Button, Grid, Typography, useMediaQuery, Stack } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Lock as IconLock } from '@mui/icons-material';\r\nimport AuthCode, { AuthCodeRef, AuthCodeProps } from 'react-auth-code-input';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport { apiCheckEmailVerificationCode } from '../../../actions/user';\r\nimport LogoImg from '../../../assets/images/logo.png';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst VerifyCodeForm = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const navigate = useNavigate();\r\n  const [verifyCode, setVerifyCode] = useState();\r\n  const handleOnChange = (res) => {\r\n    setVerifyCode(res);\r\n  };\r\n  const sendEmailFunc = () => {\r\n    if (!verifyCode) toast.error('Fügen Sie den VerifyCode ein');\r\n    else {\r\n      apiCheckEmailVerificationCode({ code: verifyCode })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            toast.success('Wir senden das geänderte Passwort an Ihre E-Mail.');\r\n            navigate('/auth/password-reset');\r\n          }\r\n        })\r\n        .catch((err) => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Grid container display=\"flex\" direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Grid container display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <img src={LogoImg} alt=\"\" style={{ width: '20%' }} />\r\n                    </Link>\r\n                  </Grid>\r\n                  {/* <Grid item xs={12}>\r\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                      <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                          <Typography color={theme.palette.success.green} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                            Passwort vergessen?\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                    {/* <TextField\r\n                      fullWidth\r\n                      name=\"verifycode\"\r\n                      label=\"VerifyCode\"\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      value={verifyCode}\r\n                      onChange={(e) => setVerifyCode(e.target.value)}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <IconLock />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    /> */}\r\n                    <AuthCode allowedCharacters=\"numeric\" onChange={handleOnChange} containerClassName=\"container-auth-code\" length={5} />\r\n                  </Grid>\r\n\r\n                  <Box sx={{ mt: 4 }}>\r\n                    <AnimateButton>\r\n                      <Button\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ backgroundColor: theme.palette.success.green }}\r\n                        onClick={sendEmailFunc}\r\n                      >\r\n                        Code überprüfen\r\n                      </Button>\r\n                    </AnimateButton>\r\n                  </Box>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                      <Typography component={Link} to=\"/auth/signup\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                        Sie haben kein Konto?\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n          <AuthFooter />\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default VerifyCodeForm;\r\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper","styled","theme","backgroundColor","palette","primary","light","minHeight","allowedCharactersValues","propsMap","alpha","type","inputMode","pattern","alphanumeric","numeric","min","max","forwardRef","ref","allowedCharacters","_ref$allowedCharacter","ariaLabel","autoFocus","_ref$autoFocus","containerClassName","disabled","inputClassName","isPassword","_ref$isPassword","length","_ref$length","placeholder","onChange","isNaN","Error","some","value","inputsRef","useRef","inputProps","useImperativeHandle","focus","current","clear","i","sendResult","useEffect","res","map","input","join","handleOnChange","e","nextElementSibling","charAt","match","handleOnKeyDown","key","previousElementSibling","t","preventDefault","handleOnFocus","select","handleOnPaste","pastedValue","clipboardData","getData","currentInput","pastedCharacter","currentValue","inputs","push","React","onKeyDown","onFocus","onPaste","el","maxLength","className","autoComplete","_loop","useTheme","navigate","useMediaQuery","breakpoints","down","useNavigate","verifyCode","setVerifyCode","useState","Grid","container","display","item","alignItems","m","mb","AuthCardWrapper","spacing","to","src","LogoImg","alt","style","width","Box","mt","AnimateButton","Button","fullWidth","size","success","green","onClick","apiCheckEmailVerificationCode","code","then","status","toast","catch","err","Divider","Typography","textDecoration","AuthFooter"],"sourceRoot":""}