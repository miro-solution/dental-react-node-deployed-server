{"version":3,"file":"static/js/89.404b37b4.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","views/auth/AuthCardWrapper.js","views/auth/AuthWrapper.js","../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Visibility.js","views/auth/auth-header/ResetPass.js"],"sourcesContent":["// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://dentoconect.io\" target=\"_blank\" underline=\"hover\">\r\n      dentoconect.io\r\n    </Typography>\r\n    <Typography variant=\"subtitle2\" component={Link} href=\"https://codemaster.com\" target=\"_blank\" underline=\"hover\">\r\n      &copy; codemaster.com\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n  <MainCard\r\n    sx={{\r\n      maxWidth: { xs: 400, lg: 475 },\r\n      margin: { xs: 2.5, md: 3 },\r\n      '& > *': {\r\n        flexGrow: 1,\r\n        flexBasis: '50%'\r\n      }\r\n    }}\r\n    content={false}\r\n    {...other}\r\n  >\r\n    <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n  </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.light,\r\n  minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Box, TextField, InputAdornment, Divider, Button, Grid, Typography, useMediaQuery, Stack } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Visibility as IconVisiblility, VisibilityOff as IconVisibilityOff, Lock as IconLock } from '@mui/icons-material';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport LogoImg from '../../../assets/images/logo.png';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { apiResetPassword } from 'actions/user';\r\nconst ResetPasswordForm = () => {\r\n  const theme = useTheme();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const navigate = useNavigate();\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const resetPasswordFuc = () => {\r\n    if (password !== confirm) toast.error('Das Passwort stimmt nicht mit dem Bestätigungspasswort überein.');\r\n    else if (password === '') {\r\n      toast.error('Bitte geben Sie Ihr Passwort ein.');\r\n    } else {\r\n      apiResetPassword(password)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            toast.success('Wir senden das geänderte Passwort an Ihre E-Mail.');\r\n            navigate('/auth/siginin');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Grid container display=\"flex\" direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12}>\r\n          <Grid container display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                  <Grid item sx={{ mb: 3 }}>\r\n                    <Link to=\"#\">\r\n                      <img src={LogoImg} alt=\"\" style={{ width: '20%' }} />\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid container direction={matchDownSM ? 'column-reverse' : 'row'} alignItems=\"center\" justifyContent=\"center\">\r\n                      <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                          <Typography color={theme.palette.success.green} gutterBottom variant={matchDownSM ? 'h3' : 'h2'}>\r\n                            Passwort zurücksetzen\r\n                          </Typography>\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Passwort\"\r\n                      type={visibility === true ? 'text' : 'password'}\r\n                      variant=\"outlined\"\r\n                      value={password}\r\n                      size=\"small\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <IconLock />\r\n                          </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"start\" component=\"div\">\r\n                            {visibility === true ? (\r\n                              <Box\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={(e) => {\r\n                                  setVisibility(false);\r\n                                }}\r\n                              >\r\n                                <IconVisibilityOff />\r\n                              </Box>\r\n                            ) : (\r\n                              <Box style={{ cursor: 'pointer' }} onClick={(e) => setVisibility(true)}>\r\n                                <IconVisiblility />\r\n                              </Box>\r\n                            )}\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"confirm\"\r\n                      label=\"Bestätigen Passwort\"\r\n                      type={visibility === true ? 'text' : 'password'}\r\n                      variant=\"outlined\"\r\n                      value={confirm}\r\n                      size=\"small\"\r\n                      margin=\"normal\"\r\n                      onChange={(e) => setConfirm(e.target.value)}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <IconLock />\r\n                          </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"start\" component=\"div\">\r\n                            {visibility === true ? (\r\n                              <Box\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                  setVisibility(false);\r\n                                }}\r\n                              >\r\n                                <IconVisibilityOff />\r\n                              </Box>\r\n                            ) : (\r\n                              <Box style={{ cursor: 'pointer' }} onClick={() => setVisibility(true)}>\r\n                                <IconVisiblility />\r\n                              </Box>\r\n                            )}\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <AnimateButton>\r\n                      <Button\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ backgroundColor: theme.palette.success.green }}\r\n                        onClick={resetPasswordFuc}\r\n                      >\r\n                        Passwort zurücksetzen\r\n                      </Button>\r\n                    </AnimateButton>\r\n                  </Box>\r\n                  <Grid item xs={12}>\r\n                    <Divider />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                      <Typography component={Link} to=\"/auth/signup\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                        Sie haben kein Konto?\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n          <AuthFooter />\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AuthWrapper","styled","theme","backgroundColor","palette","primary","light","minHeight","createSvgIcon","_jsx","d","useTheme","matchDownSM","useMediaQuery","breakpoints","down","navigate","useNavigate","visibility","setVisibility","useState","password","setPassword","confirm","setConfirm","Grid","container","display","item","alignItems","m","mb","AuthCardWrapper","spacing","to","src","LogoImg","alt","style","width","Stack","Typography","color","success","green","gutterBottom","TextField","fullWidth","name","label","type","value","size","onChange","e","InputProps","startAdornment","InputAdornment","position","endAdornment","Box","cursor","onClick","mt","AnimateButton","Button","toast","apiResetPassword","then","res","status","catch","err","console","log","Divider","textDecoration","AuthFooter"],"sourceRoot":""}